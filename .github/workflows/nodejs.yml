name: Node.js CI

on:
  push:
    tags:
      - "*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        node-version: [16]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: "https://registry.npmjs.org"

      - name: corepack
        run: corepack enable
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn --immutable
      - name: Formatter
        run: yarn format:ci
      - name: Lint
        run: yarn lint

      - name: Build Packages
        run: BASE_PATH=/react-icons ./build-script.sh
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish NPM
        run: cd packages/_react-icons_all/ && npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - uses: actions/upload-artifact@v3
        with:
          path: packages/_react-icons_*/*.tgz
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./packages/preview/out
        if: contains(github.ref, 'tags/')
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "packages/_react-icons_*/*.tgz"
          bodyFile: "packages/react-icons/VERSIONS"
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: ${{ contains(github.ref, 'snapshot') }}
        if: contains(github.ref, 'tags/')
